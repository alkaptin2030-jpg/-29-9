import{c as $,y as I,r as u,j as l,P as f,t as M}from"./index-qsZKtsS2.js";/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const L=$("Trash2",[["path",{d:"M3 6h18",key:"d0wm0j"}],["path",{d:"M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6",key:"4alrt4"}],["path",{d:"M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2",key:"v07s0e"}],["line",{x1:"10",x2:"10",y1:"11",y2:"17",key:"1uufr5"}],["line",{x1:"14",x2:"14",y1:"11",y2:"17",key:"xtxkd"}]]);var d="Progress",c=100,[j,S]=I(d),[w,E]=j(d),m=u.forwardRef((e,r)=>{const{__scopeProgress:n,value:t=null,max:a,getValueLabel:h=R,...N}=e;(a||a===0)&&!v(a)&&console.error(V(`${a}`,"Progress"));const s=v(a)?a:c;t!==null&&!p(t,s)&&console.error(_(`${t}`,"Progress"));const o=p(t,s)?t:null,b=i(o)?h(o,s):void 0;return l.jsx(w,{scope:n,value:o,max:s,children:l.jsx(f.div,{"aria-valuemax":s,"aria-valuemin":0,"aria-valuenow":i(o)?o:void 0,"aria-valuetext":b,role:"progressbar","data-state":P(o,s),"data-value":o??void 0,"data-max":s,...N,ref:r})})});m.displayName=d;var x="ProgressIndicator",g=u.forwardRef((e,r)=>{const{__scopeProgress:n,...t}=e,a=E(x,n);return l.jsx(f.div,{"data-state":P(a.value,a.max),"data-value":a.value??void 0,"data-max":a.max,...t,ref:r})});g.displayName=x;function R(e,r){return`${Math.round(e/r*100)}%`}function P(e,r){return e==null?"indeterminate":e===r?"complete":"loading"}function i(e){return typeof e=="number"}function v(e){return i(e)&&!isNaN(e)&&e>0}function p(e,r){return i(e)&&!isNaN(e)&&e<=r&&e>=0}function V(e,r){return`Invalid prop \`max\` of value \`${e}\` supplied to \`${r}\`. Only numbers greater than 0 are valid max values. Defaulting to \`${c}\`.`}function _(e,r){return`Invalid prop \`value\` of value \`${e}\` supplied to \`${r}\`. The \`value\` prop must be:
  - a positive number
  - less than the value passed to \`max\` (or ${c} if no \`max\` prop is set)
  - \`null\` or \`undefined\` if the progress is indeterminate.

Defaulting to \`null\`.`}var y=m,k=g;const T=u.forwardRef(({className:e,value:r,...n},t)=>l.jsx(y,{ref:t,className:M("relative h-4 w-full overflow-hidden rounded-full bg-secondary",e),...n,children:l.jsx(k,{className:"h-full w-full flex-1 bg-primary transition-all",style:{transform:`translateX(-${100-(r||0)}%)`}})}));T.displayName=y.displayName;export{T as P,L as T};
