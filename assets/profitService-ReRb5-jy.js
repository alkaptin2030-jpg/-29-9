var T=Object.defineProperty;var w=(c,t,e)=>t in c?T(c,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):c[t]=e;var g=(c,t,e)=>w(c,typeof t!="symbol"?t+"":t,e);import{reportsService as i}from"./reportsService-DDeE87gK.js";import{Q as m}from"./index-BplSILNk.js";class p{static getProfitPinKey(t){return t?`${this.PROFIT_PIN_KEY_BASE}_${t}`:this.PROFIT_PIN_KEY_BASE}static getMasterPinKey(t){return t?`${this.MASTER_PIN_KEY_BASE}_${t}`:this.MASTER_PIN_KEY_BASE}static setProfitPin(t,e){console.warn("setProfitPin is deprecated. Using master PIN instead.")}static hasProfitPin(t){try{const e=localStorage.getItem(this.getMasterPinKey(t));return!!e&&e.length>0}catch{return!1}}static verifyProfitPin(t,e){try{const r=localStorage.getItem(this.getMasterPinKey(e));return r?atob(r)===t:!1}catch{return!1}}static getProfitData(t){i.autoResetReportsIfNeeded(t);const e=i.getProfits(t),r=this.getWithdrawTransferProfits(t);return{dailyProfit:e.dailyProfit,monthlyProfit:e.monthlyProfit,dailyWithdrawProfit:r.dailyWithdrawProfit,monthlyWithdrawProfit:r.monthlyWithdrawProfit,dailyTransferProfit:r.dailyTransferProfit,monthlyTransferProfit:r.monthlyTransferProfit,lastUpdated:new Date}}static addProfit(t,e){i.addProfit(t,"daily",e),i.addProfit(t,"monthly",e)}static calculateProfitFromTransaction(t){return i.calculateTransactionProfit(t)}static resetProfits(t,e,r){if(!this.verifyProfitPin(e,r))return!1;const s=r?`reportsData_${r}`:"reportsData",o=i.getReportsData(r);if(t==="daily"?(o.dailyProfit=0,o.lastDailyProfitResetDate=new Date):(o.monthlyProfit=0,o.lastMonthlyProfitResetDate=new Date),localStorage.setItem(s,JSON.stringify(o)),r)try{m.updateUserData(r,{reportsData:{...o}})}catch(l){console.warn("تعذر مزامنة تصفير الأرباح مع Firebase:",l)}return!0}static clearProfitPin(t){localStorage.removeItem(this.getProfitPinKey(t))}static updateProfitsFromTransactions(t,e){const r=e?`reportsData_${e}`:"reportsData",s=i.getReportsData(e);let o=0,l=0;const f=new Date,P=f.getMonth(),h=f.getFullYear(),y=i.filterVisibleTransactions(t,"daily",e),d=i.filterVisibleTransactions(t,"monthly",e);if(y.forEach(n=>{new Date(n.createdAt).toDateString()===f.toDateString()&&(o+=this.calculateProfitFromTransaction(n))}),d.forEach(n=>{const a=new Date(n.createdAt);a.getMonth()===P&&a.getFullYear()===h&&(l+=this.calculateProfitFromTransaction(n))}),s.dailyProfit=Math.round(o*100)/100,s.monthlyProfit=Math.round(l*100)/100,localStorage.setItem(r,JSON.stringify(s)),e)try{m.updateUserData(e,{reportsData:{...s}})}catch(n){console.warn("تعذر مزامنة تحديث الأرباح من المعاملات مع Firebase:",n)}}static getWithdrawTransferProfits(t){i.getReportsData(t);const e=new Date,r=e.getMonth(),s=e.getFullYear(),o=t?`transactions_${t}`:"transactions",l=JSON.parse(localStorage.getItem(o)||"[]");let f=0,P=0,h=0,y=0;const d=i.filterVisibleTransactions(l,"daily",t),n=i.filterVisibleTransactions(l,"monthly",t);return d.forEach(a=>{new Date(a.createdAt).toDateString()===e.toDateString()&&(a.type==="withdraw"?f+=this.calculateProfitFromTransaction(a):(a.type==="receive"||a.type==="send")&&(h+=this.calculateProfitFromTransaction(a)))}),n.forEach(a=>{const D=new Date(a.createdAt);D.getMonth()===r&&D.getFullYear()===s&&(a.type==="withdraw"?P+=this.calculateProfitFromTransaction(a):(a.type==="receive"||a.type==="send")&&(y+=this.calculateProfitFromTransaction(a)))}),{dailyWithdrawProfit:Math.round(f*100)/100,monthlyWithdrawProfit:Math.round(P*100)/100,dailyTransferProfit:Math.round(h*100)/100,monthlyTransferProfit:Math.round(y*100)/100}}}g(p,"PROFIT_PIN_KEY_BASE","profit_pin"),g(p,"MASTER_PIN_KEY_BASE","master_pin");export{p as ProfitService};
