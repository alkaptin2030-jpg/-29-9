let t=null;class s{static hasMasterPin(){const r=t;return r!==null&&r!==""}static createMasterPin(r){try{return!r||r.length<4?!1:(t=btoa(r),!0)}catch(e){return console.error("Error creating master PIN:",e),!1}}static verifyMasterPin(r){try{const e=t;return e?atob(e)===r:!1}catch(e){return console.error("Error verifying master PIN:",e),!1}}static changeMasterPin(r,e){try{return this.verifyMasterPin(r)?this.createMasterPin(e):!1}catch(n){return console.error("Error changing master PIN:",n),!1}}static deleteMasterPin(){try{return t=null,!0}catch(r){return console.error("Error deleting master PIN:",r),!1}}static getMasterPin(){try{const r=t;return r?atob(r):null}catch(r){return console.error("Error getting master PIN:",r),null}}}export{s as M};
